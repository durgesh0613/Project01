<resources>
    <string name="app_name">Project01</string>
    <!--    Login Activity-->
    <string name="enter_username">User name</string>
    <string name="enter_password">Password</string>
    <string name="btnSignupText">Signup</string>
    <string name="btnLoginText">Login</string>
    <string name="Login">Login</string>
    <!--    Login Activity Error Messages-->
    <string name="err_IncorrectCredentials">Incorrect Credentials</string>
    <string name="err_emptyCredentials">Login Credentials empty</string>
    <!--    Login to Welcome Activity extra keys-->
    <string name="ext_login_username">USER_NAME</string>

    <!-- sign up page -->
    <string name="hint_username">Enter username</string>
    <string name="hints_email">Enter email</string>
    <string name="hints_password">Enter password</string>
    <string name="hints_password2">Retype password</string>
    <string name="hints_phone">Enter Phone</string>
    <string name="btn_signup">Sign me up!</string>
    <string name="toast_username_exists">Username already exists!</string>
    <string name="toast_password_mismatch">Passwords do not match!</string>
    <string name="toast_invalid_email">Invalid email! (Expected: xyz@xyz)</string>
    <string name="toast_invalid_phone">Invalid phone number!</string>
    <string name="toast_empty_username">Username cannot be empty</string>
    <string name="toast_signup_success">Signed up successfully</string>
    <string name="err_invalid_username">Invalid username!</string>
    <string name="err_invalid_password">Invalid password(Must contain at least 1 lowercase, 1 uppercase, 1 special character, 1 digit)</string>
    <string name="err_invalid_email">Invalid email!</string>
    <string name="err_invalid_phone">Invalid phone!</string>
    <string name="regex_uname">[a-zA-Z]+</string>
    <string name="regex_password">^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&amp;-+=()])(?=\\S+$).{8, 20}$</string>
    <!--
        https://www.geeksforgeeks.org/how-to-validate-a-password-using-regular-expressions-in-java/
        ^ represents starting character of the string.
        (?=.*[0-9]) represents a digit must occur at least once.
        (?=.*[a-z]) represents a lower case alphabet must occur at least once.
        (?=.*[A-Z]) represents an upper case alphabet that must occur at least once.
        (?=.*[@#$%^&-+=()] represents a special character that must occur at least once.
        (?=\\S+$) white spaces donâ€™t allowed in the entire string.
        .{8, 20} represents at least 8 characters and at most 20 characters.
        $ represents the end of the string.
    -->
</resources>